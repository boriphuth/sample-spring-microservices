def CONTAINER_NAME="account"

def DOCKER_HUB_USER="boriphuth"
def HTTP_PORT="2220"

node(label:'builder') {

        stage('Initialize') {
            def dockerHome = tool 'Docker'
            def mavenHome  = tool 'Maven'
            env.PATH = "${dockerHome}/bin:${mavenHome}/bin:${env.PATH}"
        }
        
        stage('Checkout') {
            git url: 'https://github.com/boriphuth/sample-spring-microservices.git', credentialsId: 'github-id', branch: 'master'
        }

        stage('Build') {
            sh 'mvn clean install'

            def pom = readMavenPom file:'pom.xml'
            print pom.version
            env.version = pom.version
        }

        stage('Image') {
            dir ('account-service') {
                docker.withRegistry('https://index.docker.io/v1/', 'dockerhub') {
                def app = docker.build("${DOCKER_HUB_USER}/${CONTAINER_NAME}:${env.version}", '.').push()
                // def app = docker.build("localhost:5000/account-service:${env.version}", '.').push()
                }
            }
        }

        stage ('Run') {
            sh "docker pull ${DOCKER_HUB_USER}/${CONTAINER_NAME}:${env.version}"
            sh "docker run -d --rm -p ${HTTP_PORT}:${HTTP_PORT} --name ${CONTAINER_NAME} ${DOCKER_HUB_USER}/${CONTAINER_NAME}:${env.version}"
            // docker.image("localhost:5000/account-service:${env.version}").run('-p 2220:2220 -h account --name account --link discovery')
            echo "${DOCKER_HUB_USER}/${CONTAINER_NAME}:${env.version} port : ${HTTP_PORT}"
        }

        stage ('Final') {
            build job: 'customer-service-pipeline', wait: false
        }      

    }